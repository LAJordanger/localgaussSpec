This folder contains the code needed for the reproduction of figure S3.5 in the paper P2="Local Gaussian Cross-Spectrum Analysis" (publised in Econometrics, https://doi.org/10.3390/econometrics11020012).

This is a heatmap-based plot that shows the effect on the estimated local Gaussian cross-correlations as the point varies along the diagonal.  This investigates the DAX- and CAC-components of the log-returns of the EuStockMarkets-data.  (The EuStockMarkets contains 1860 daily closing prices collected in the period 1991-1998, from the following four major European stock indices: Germany DAX (Ibis), Switzerland SMI, France CAC, and UK FTSE.  The data was sampled in business time, i.e., weekends and holidays were omitted.)

Note that this example use the data from P2_fig_07, where the heatmaps for the Co- and Quad-spectra was computed.  See P2_fig_S3.1 for the heatmaps- and distance-plots for the individual marginal local Gaussian autospectra of the DAX- and CAC-components, and see P2_fig_S3.2 for the heatmaps for the Amplitude- and Phase-spectra.

There is no "2_Data.R"-file in this folder, use the one in P2_fig_07 instead.  Use the "3_Shiny.R"-file in P2_fig_07 if it is of interest to start the interactive shiny-application, which enables the user to see how the resulting local Gaussian spectral densities changes with the different tuning parameters (truncation level, bandwidth, point) that was used in "2_Data.R".

The file "4_Plot.R" contains the code needed for the reproduction of figure S3.5 in paper P2.  This script will for the specified tuning parameters create the desired plots, adjust them (e.g. having the same scale on all the plots), and then collect the plots in a file that is saved to disk.

NOTE: It is intended that this script can be used as a template for similar investigations.  The interested reader should then be aware of the fact that the code in "2_Data.R" creates a folder with a name that depends on the investigated example, and the name of this folder is needed in the files "3_Shiny.R" and "4_Plot.R".  The present folder-reference in "3_Shiny.R" and "4_Plot.R" is based on the result from "2_Data.R" when it was tested by the developer, and for simulated time series (based on a given seed to the random number generator), it should be the same result that occurs every time the script is used.  It is however not possible to guarantee that the exact same result will occur across different operative systems (or different versions of R), so it might thus happen that some users must perform a minor revision due to this.  This task requires an update of one line of code in the beginning of the respective files.

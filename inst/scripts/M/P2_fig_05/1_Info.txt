This folder contains the code needed for the reproduction of figure 5 in the paper P2="Nonlinear cross-spectrum analysis via the local Gaussian correlation" (https://arxiv.org/abs/1708.02495).

This investigates a bivariate extension of the "local trigonometric" example seen in P1_fig_07, and this case uses the same data that was computed in the P1_fig_04-case.  It is in essence the same parameter-configuration that is used for both of the variables, the only difference is that all the cosine-components in the second variable have received the same phase-shift.  The code in P2_fig_04 created a plot based on points on the diagonal, whereas this case considers points outside of the diagonal whereas P2_fig_04 considers points on the diagonal.  Note that P2_fig_06 contains a similar example, but in that case individual phase-adjustments have been used for the different cosine-components of the "local trigonometric" example.

There is no "2_Data.R"-file in this folder, use the one in P2_fig_04 instead.  Use the "3_Shiny.R"-file in P2_fig_04 if it is of interest to start the interactive shiny-application, which enables the user to see how the resulting local Gaussian spectral densities changes with the different tuning parameters (truncation level, bandwidth, point) that was used in "2_Data.R".

The file "4_Plot.R" contains the code needed for the reproduction of figure 5 in paper P2.  This script will for the specified tuning parameters create the desired plots, adjust them (e.g. having the same scale on all the plots), and then collect the plots in a file that is saved to disk.

NOTE: It is intended that this script can be used as a template for similar investigations.  The interested reader should then be aware of the fact that the code in "2_Data.R" creates a folder with a name that depends on the investigated example, and the name of this folder is needed in the files "3_Shiny.R" and "4_Plot.R".  The present folder-reference in "3_Shiny.R" and "4_Plot.R" is based on the result from "2_Data.R" when it was tested by the developer, and for simulated time series (based on a given seed to the random number generator), it should be the same result that occurs every time the script is used.  It is however not possible to guarantee that the exact same result will occur across different operative systems (or different versions of R), so it might thus happen that some users must perform a minor revision due to this.  This task requires an update of one line of code in the beginning of the respective files.

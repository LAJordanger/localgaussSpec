This folder contains the code needed for the reproduction of figure 11 in the paper P2="Nonlinear cross-spectrum analysis via the local Gaussian correlation" (https://arxiv.org/abs/1708.02495).

This is based on a simple multivariate GARCH-model (fitted to the log-returns of the EuStockMarkets-data), where the simulations are based on the rmgarch-package (Alexios Ghalanos, https://cran.r-project.org/web/packages/rmgarch).  Note that the rmgarch-package is not installed together with the localgaussSpec-package, and it is thus necessary to install rmgarch before the code in "2_Data.R" can be used.

Note that no effort whatsoever was made with regard to finding a good model for the log-returns of the EuStockMarkets-data.  The reason for this is that it is of interest to show that a comparison of the local Gaussian spectra can be used to see if the local copula-dependency structure of the fitted model match the corresponding dependency structure of the original sample. (The full dependency structure is not available since the marginals have been replaced with pseudo-normalised versions.)

This plot shows the local Gaussian cross-correlations for this multivariate GARCH-model, using the two components corresponding to the log-returns of the original DAX and CAC components from the EuStockMarkets-data.  The corresponding local Gaussian spectra are given in P2_fig_12.  Use the integrated shiny-application (see "3_Shiny.R" for code to start it) to inspect other configurations.

The file "3_Shiny.R" contains the code that is needed in order to start the interactive shiny-application, which enables the user to see how the resulting local Gaussian spectral densities changes with the different tuning parameters (truncation level, bandwidth, point) that was used in "2_Data.R".

The file "4_Plot.R" contains the code needed for the reproduction of figure 11 in paper P1.  This script will for the specified tuning parameters create the desired plots, adjust them (e.g. having the same scale on all the plots), and then collect the plots in a file that is saved to disk.

NOTE: It is intended that this script can be used as a template for similar investigations.  The interested reader should then be aware of the fact that the code in "2_Data.R" creates a folder with a name that depends on the investigated example, and the name of this folder is needed in the files "3_Shiny.R" and "4_Plot.R".  The present folder-reference in "3_Shiny.R" and "4_Plot.R" is based on the result from "2_Data.R" when it was tested by the developer, and for simulated time series (based on a given seed to the random number generator), it should be the same result that occurs every time the script is used.  It is however not possible to guarantee that the exact same result will occur across different operative systems (or different versions of R), so it might thus happen that some users must perform a minor revision due to this.  This task requires an update of one line of code in the beginning of the respective files.

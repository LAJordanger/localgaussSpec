This folder contains the code needed for the reproduction of figure D5 in the paper P1="Nonlinear spectral analysis: A local Gaussian approach" (https://arxiv.org/abs/170D5.02166).

This is a heatmap-based plot with its corresponding distance based plot, that shows the effect on the estimated local Gaussian spectral density as the bandwidth varies.  This investigates the dmbp-data, i.e. the "Deutschemark/British pound Exchange Rate" that was used by Bollerslev, and Ghysels in their paper "Periodic Autoregressive Conditional Heteroscedasticity", 1996, Journal of Business and Economic Statistics, *14*, 139-151.  The data-set used here has been copied from the version used in the rugarch-package (Alexios Ghalanos, https://cran.r-project.org/web/packages/rugarch), since a user might like to test this script without having to install that package first.

Note that P1_fig_D6 and P1_fig_D7 also use the data computed in this example.

The file "3_Shiny.R" contains the code that is needed in order to start the interactive shiny-application, which enables the user to see how the resulting local Gaussian spectral densities changes with the different tuning parameters (truncation level, bandwidth, point) that was used in "2_Data.R".

The file "4_Plot.R" contains the code needed for the reproduction of figure D5 in paper P1.  This script will for the specified tuning parameters create the desired plots, adjust them (e.g. having the same scale on all the plots), and then collect the plots in a file that is saved to disk.  Note that this script also will create the plot seen in figure D7.

NOTE: It is intended that this script can be used as a template for similar investigations.  The interested reader should then be aware of the fact that the code in "2_Data.R" creates a folder with a name that depends on the investigated example, and the name of this folder is needed in the files "3_Shiny.R" and "4_Plot.R".  The present folder-reference in "3_Shiny.R" and "4_Plot.R" is based on the result from "2_Data.R" when it was tested by the developer, and for simulated time series (based on a given seed to the random number generator), it should be the same result that occurs every time the script is used.  It is however not possible to guarantee that the exact same result will occur across different operative systems (or different versions of R), so it might thus happen that some users must perform a minor revision due to this.  This task requires an update of one line of code in the beginning of the respective files.
